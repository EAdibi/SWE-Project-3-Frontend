name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: quizwhiz-441721
  GAR_LOCATION: us-central1
  REPOSITORY: quizwhiz-app
  IMAGE: quizwhiz-image
  WORKING_DIR: quizWhiz
  SERVICE_ACCOUNT: quizwhiz-deployer@quizwhiz-441721.iam.gserviceaccount.com

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: ${{ env.WORKING_DIR }}
      run: npm install
      
    - name: Build
      working-directory: ${{ env.WORKING_DIR }}
      run: npx expo export --platform web 
      
    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        token_format: 'access_token'
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin'
        
    - name: Create Artifact Registry Repository
      run: |
        gcloud artifacts repositories create $REPOSITORY \
          --repository-format=docker \
          --location=$GAR_LOCATION \
          --description="Docker repository for QuizWhiz" \
          || true
        
    - name: Configure Docker
      run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev
      
    - name: Build Docker image
      working-directory: ${{ env.WORKING_DIR }}
      run: docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA .
      
    - name: Push Docker image
      run: docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
      
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy quizwhiz-app \
          --image $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA \
          --region $GAR_LOCATION \
          --platform managed \
          --allow-unauthenticated \
          --service-account ${{ env.SERVICE_ACCOUNT }}